Comandos de Linux
============================================================

*cd(change directory): cd <ruta> : Cambiar de directorio.

*mkdir(make directory): mkdir <ruta> : Crea directorios.

*rmdir(remove dir):rmdir <ruta> :  Permite eliminar directorios vacios.

*find ruta [opciones] : Encuentra uno o mas archivos asumiendo que conoces su nombre aproximado.
	* find -name : Busca dicho archivo, en el directorio actual o en cualquier subidirectorio.
	* find -atime n : Verdadero si se accedió al archivo hace n dias. El tiempo de acceso de los directorios en la ruta se cambia por el find mismo.
	* find -ctime n : Verdadero si el estado del archivo se cambio hace n  dias.
	* find -group gname : Verdadero si el archivo pertenece al grupo gname. Si gname es numerico y no aparece en el archivo /etc/group, dr yoma como identificador del grupo.
	* find -mtime n : Verdadero si la informacion del archivo fue modificada hace n dias.
	* find -size n[c] : Verdadero si el archivo tiene n bloques de largo (512 octetos por bloque). Si n va seguida de una c, el tamañano es en octetos.

*file [opciones] nombre_de_archivo/directorio : El comando file te dice si el objeto que ves es un directorio o un archivo.
	* file -c : Comprobar el archivo magico para errores de formato. Por razones de eficiencia, esta validación no se lleva a cabo.
	* file -h : No sigue enlaces simbólicos.
	* file -m : Utiliza mfile como archivo magico alternativo.
	* file -f : ffile contiene una lista de los archivos a examinar.

*man(manual) nombre_comando [opciones] : Proporciona informacion sobre el comando solicitado o permite a los usuarios mbuscar relacionados con un determinada palabra clave.

*mount(): Monta dispositivos de almacenamiento en particiones indicadas.

*du(): Muestra el uso de disco. En general los archivos se almacenan en bloques de 4Kb. Si un archivo es menor seguirá ocupando 4Kb de espacio en disco. du indica la ocupación real.

*df(disk free): Muestra el espacio libre que queda en disco. Es útil para scrpts automatizados.
	*df pydf : pydf(python disk free) realiza la misma tarea pero ordenando en columnas y con colores. Es mejor para ver el consumo manualmente.

*ln [opciones] origen [destino] : establece enlaces entre archivos. Puede ser un enlace rígido o simbólico.
	* ln -d : Permite al super-usuario hacer enlaces rígidos a directorios.
	* ln -s : Crear enlace simbólico.
	* ln -f : Borrar los archivos de destino que ya existen.

*ls [opciones] [archivo...] : sirve para listar archivos. Si se ejecuta sin argumentos, dará como resultado un listado de todos los archivos del directorio donde el usuario está posicionado.
	* ls -a : Lista todos los archivos, incluyendo aquellos que comienzan con un '.' . 
	* ls -d : Lista el nombre del directorio en vez de los archivos contenidos en él.
	* ls -l : Lista los archivos con mucho mas detalle, especificando para cada archivo sus permisos, el número de enlaces rígidosm el nombre del propietario, el grupo al que pertenece, el tamaño e bytes y la fecha de la última modificación.
	* ls -r : Invierte el orden de listado de los archivos contenidos en él.
	* ls -s : Muestra el tamaño de cada archivo en bloques de 1024 bytes a la izquierda del nombre.
	* ls -h : Muestra los tamaños de archivo en términos de kilobytes, megabytes, etc.
	* ls -t : Lista los archivos ordenados por el tiempo de modificacion en vez de ordenarlos alfabéticamente.
	* ls -A : Lista todos los archivos excepto el '.' y '..' . 
	* ls -R : Lista los contenidos de todos los directorios recursivamente.
	* ls -S : Ordena el listado por el tamaño de los archivos.

*cp [opciones] archivo-origen...  directorio-destino : Se utiliza para copiar archivos.
	* cp -f : Borrar los archivos de destino ya existentes.
	* cp -d : Copiar los enlaces simbólicos tal cual son, en lugar de copiar los archivos a los que apuntan.
	* cp -p : Preservar los permisos, el usuario y elg rupo del archivo a copiar.
	* cp -R : Copiar directorios recursivamente.
	* cp -a : Equivalente a utilizar las opciones -dpR.
	* cp -u : No copia un archivo si en el destino ya existe tal archivo, y éste tiene la fecha de modificacion igual o más reciente.
	* cp -v : Da información en pantalla sobre los archivos que se van copiando.

*mv [opcion...] origen... destino : Este comando se usa tanto para mover archivos como para renombrarlos.
	* mv -f : Borrar los archivos de destino existentes sin preguntar al usuario.
	* mv -i : Pregunta por cada archivo a sobreescribir antes de hacerlo.
	* mv -v : Muestra el nombre de cada archivo a ser movido.

*passwd [opciones] : Cambia la contraseña del usuario.

*who [opcines] [archivo] : Lista los nombres de usuarios conectados actualmente, su terminal, el tiempo que han estado conectado, y el nombre del host desde el que se han conectado.
	* who am i : Muestra el nombre de usuario de quien lo invoca. El 'am' y 'i' deben ir separados.
	* who -b : Muestra la hora del ultimo arranque del sistema.
	* who -d : Muestra los procesos muertos.
	* who -H : Muestra los encabezados de columna encima de la salida.
	* who -i : Incluye el tiempo parado como HORAS:MINUTOS. Un tiempo parado de . intica actividad en el último minuto.
	* who -m : Igual que who am i.
	* who -q : Muestra solo los nombres de usuario y la cuenta de usuarios activos.
	* who -T,-w : Incluir el mensaje de estado del usuario en salida.

* su(substitute user): Sirve para cambiar de usuario, o para pasar a Super Usuario.

* chmod(change mode) [opciones] [MODE] dichero/directorio: Es una llamada al sistema, que permite cambiar los permisos de acceso de un fichero o directorio.

* chown(Change Owner) [opciones] nuevo_usuario nombre_de_archivo/directorio : Se usa para cambiar el propietario/usuario del archivo o directorio. Es un comando de administrado, solo el usuario root puede cambiar el propietario de un archivo o directorio.
	* chown -R : Cambia el permiso en archivos que esten en subdirectorios del directorio en el que estes en ese momento.
	* chown -c : Cambia el permiso para cada archivo.
	* chown -f : Previene a chown de mostrar mensajes de error cuando es incapaz de cambiar la titularidad del archivo.

* chgrp(Change Group) [opciones] nuevo_grupo nombre_de_archivo : Se usa para cambiar el grupo de un archivo o directorio. Es un comando de administrados. Solo el usuario root puede cambiar el grupo de un archivo o directorio.
	* chgrp -R : Cambia el permiso en archivos que esten en subdirectorios del directorio en el que estes en ese momento.
	* chgrp -c : Cambia el permiso para cada archivo.
	* chgrp -f : Forzar. No informar errores.

* ps(Process Status) [opciones] : Se usa para informar del estado del proceso.
	* ps -a : Listar informacion sobre todos los procesos mas frecuentes solicitados: todos excepto los lideres de grupo de procesos y los procesos no asociados con una terminal.
	* ps -A : Lista informacion sobre todos los procesos.
	* ps -d : Lista informacion sobre todos los procesos excepto los lideres de sesion.
	* ps -e : Lista informacion sobre todos los procesos en ejecucion.
	* ps -f : Genera un listado completo.
	* ps -j : Mostrar identificador de sesión y de grupo de proceso.
	* ps -l : Genera un listado largo.

* pstree [opciones] : Muestra en vista de arbol una lista de los procesos en ejecucion.

* top : es una herramienta que nos proporciona informacion de los procesos que se estan corriendo en ese momento en timepo real con valores de uso de CPU, memorioa, swap, u la posibilidad de manipular procesos.  Presenta una interfaz simple que cuenta con varias partes.

* kill [-s][-l] %pid : Se usa para detener procesos en segundo plano.
	* kill -s : Especifica la señal a enviar. La señal puede ser un nombre de señal o un numero.
	* kill -l : Escribe todos los valores de señal soportados por la implementacion, si no se da ningun operando.
	* kill -pid : Identificador de proceso o trabajo.
	* kill -9 : Fuerza el kll de un proceso.

* killall : Mata un proceso usando su nombre. En el caso de que haya mas de una instancia de ese programa ejecutandose, se cerrarán todas.

* nice : Ejecuta un comando con una prioridad determinada, o modifica a prioridad de un proceso. Utiliza una prioridad variable que parte de la prioridad del shell y suma o resta valores. Mientras menor es el valor de la prioridad, mayor prioridad tiene el proceso.
	* nice -n prioridad[comando]
	Ejemplo: mice -n -5 find. //El valor de la prioridad del proceso find decrece en 5, aumentando su prioridad.



























































